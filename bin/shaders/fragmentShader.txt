#version 400 core

in vec2 pass_textureCoords;
in float[5] lightDistance;
in vec3[5] pass_lightPos;

out vec4 out_Color;

uniform sampler2D sampler;
uniform vec4 enviromentalLighting;
uniform vec3[5] lightColor;
uniform float[5] lightPower;

void main(void){
	vec4 textures = texture(sampler, pass_textureCoords);
	vec4 totalLight;
	for(int i = 0; i < 5; i++){
		vec3 test = pass_lightPos[i] + lightDistance[i];
		totalLight += vec4((lightColor[i] * lightPower[i] / (lightDistance[i] * lightDistance[i])), 1.0);
	
	}
	if(textures.a == 0.0){
		discard;
	}
	
	

	out_Color = totalLight * enviromentalLighting +  enviromentalLighting * textures;
}